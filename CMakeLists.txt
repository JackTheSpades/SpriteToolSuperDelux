cmake_minimum_required(VERSION 3.10)
project(pixi VERSION 1.32)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)
add_executable(pixi src/icon.rc src/cfg.cpp src/file_io.cpp src/json.cpp src/map16.cpp src/paths.cpp src/sprite.cpp src/structs.cpp src/MeiMei/MeiMei.cpp src/asar/asardll.c src/json/base64.cpp)
if (CMAKE_COMPILER_IS_GNUCXX)
    if (WIN32)
        message(STATUS "Windows build, adding static libraries")
        target_link_options(pixi PRIVATE -m32 -static -s -Wl,--gc-sections)
        target_link_libraries(pixi PRIVATE -static-libgcc -static-libstdc++)
    else()
        message(STATUS "Unix build, not adding static libraries")
        target_link_options(pixi PRIVATE -m32 -s -Wl,--gc-sections)
        target_link_libraries(pixi PRIVATE dl)
    endif() 
    message(STATUS "GCC detected, adding compile flags")
    target_compile_options(pixi PRIVATE -m32 -Wall -Wextra -Wpedantic) ## -m32 has to be added both in link options and in compile options otherwise unix complains about incompatible architectures
else()
    set(CMAKE_GENERATOR "Visual Studio 16 2019")
    set(CMAKE_GENERATOR_PLATFORM Win32 CACHE INTERNAL "")
    set(CMAKE_VS_PLATFORM_NAME Win32 CACHE INTERNAL "")
    target_link_options(pixi PRIVATE /INCREMENTAL:NO /NODEFAULTLIB:MSVCRT)
    message(STATUS "MSVC detected, adding compile flags")
    target_compile_options(pixi PRIVATE /O2 /MT /w /std:c++17) ## we disable all warnings just cause there's like 5000 and they are noisy, we only care about gcc's warnings anyway
endif()
